name: Build and Release Tools

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Get changed files
        id: changed-files
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          else
            git fetch origin main
            git diff origin/main --name-only > changed_files.txt
          fi
          echo "CHANGED_FILES=$(cat changed_files.txt)" >> $GITHUB_ENV

      - name: Build tools
        shell: bash
        run: |
          mkdir -p tools
          for tool_dir in buildqbdi frid; do
            py_file="$tool_dir/$tool_dir.py"
            if grep -q "$py_file" <<< "$CHANGED_FILES"; then
              echo "Building $tool_dir..."
              cd $tool_dir
              pip install -r requirements.txt
              pyinstaller --onefile $tool_dir.py
              mv "dist/$tool_dir.exe" "../tools/"
              cd ..
            fi
          done

      - name: Commit updated tools
        shell: bash
        id: commit
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add tools/
          if ! git diff --cached --quiet; then
            git commit -m "Update built tools"
            git push
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          else
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
          fi

      - name: Check unreleased tools
        shell: bash
        id: check-unreleased
        run: |
          CURRENT_TOOLS=$(ls tools/*.exe 2>/dev/null | xargs -n1 basename)
          echo "Current tools: $CURRENT_TOOLS"
          
          RELEASED_ASSETS=$(gh release list --limit 100 | awk '{print $1}' | xargs -I{} gh release view {} --json assets --jq '.assets[].name' | tr '\n' ' ')
          echo "Released assets: $RELEASED_ASSETS"
          
          MISSING_TOOLS=""
          for tool in $CURRENT_TOOLS; do
            if [[ ! " $RELEASED_ASSETS " =~ " $tool " ]]; then
              MISSING_TOOLS+="$tool "
            fi
          done
          
          echo "UNRELEASED_TOOLS=${MISSING_TOOLS%% }" >> $GITHUB_ENV
          echo "NEEDS_RELEASE=$([ -n "$MISSING_TOOLS" ] && echo "true" || echo "false")" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: env.HAS_CHANGES == 'true' || env.NEEDS_RELEASE == 'true'
        uses: softprops/action-gh-release@v1
        with:
          name: "Release $(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)"
          body: "Automated release of built tools"
          files: tools/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}